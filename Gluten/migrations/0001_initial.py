# Generated by Django 2.2 on 2019-04-26 08:12

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='Комментарий', max_length=200)),
                ('pub_date', models.DateTimeField(auto_now=True, verbose_name='Дата и время публикации')),
                ('likes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=40)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Вкуснятина', max_length=200)),
                ('recepts_text', django.contrib.postgres.fields.jsonb.JSONField()),
                ('pub_date', models.DateTimeField(auto_now=True, verbose_name='Дата и время публикации')),
                ('likes', models.IntegerField(default=0)),
                ('tag_name', models.ManyToManyField(to='Gluten.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(default='\u200e\u2068media/default.png', upload_to='media', verbose_name='Изображение профиля')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество рецептов')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LikeRecept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gluten.Recept', verbose_name='Рецепт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='LikeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField(default=None)),
                ('comment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Gluten.Comment')),
                ('recept', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Gluten.Recept')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='recept',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='Gluten.Recept'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор'),
        ),
    ]
